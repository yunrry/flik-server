# Flik Batch Server - Blue/Green Deployment
services:
  # Batch Server - Blue
  batch-blue:
    profiles:
      - blue
    build:
      context: .
      dockerfile: Dockerfile
    image: flik-batch:latest
    container_name: batch-blue
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SERVER_PORT=8081
      - JAVA_OPTS=-Xms512m -Xmx1g -XX:+UseG1GC -XX:MaxGCPauseMillis=200
      - BUILD_INFO=${BUILD_TAG:-latest}
      - DEPLOYMENT_ENV=blue
      - TOURISM_API_SERVICE_KEY=${TOURISM_API_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8085:8081"
    networks:
      - goormthon-java_dormung-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 90s

  # Batch Server - Green
  batch-green:
    profiles:
      - green
    build:
      context: .
      dockerfile: Dockerfile
    image: flik-batch:latest
    container_name: batch-green
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SERVER_PORT=8081
      - JAVA_OPTS=-Xms512m -Xmx1g -XX:+UseG1GC -XX:MaxGCPauseMillis=200
      - BUILD_INFO=${BUILD_TAG:-latest}
      - DEPLOYMENT_ENV=green
      - TOURISM_API_SERVICE_KEY=${TOURISM_API_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8086:8081"
    networks:
      - goormthon-java_dormung-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 90s

networks:
  goormthon-java_dormung-network:
    external: true