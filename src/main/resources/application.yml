spring:
  application:
    name: flik

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 10
      connection-timeout: 20000      # 20초
      idle-timeout: 600000           # 10분
      max-lifetime: 1800000          # 30분
      validation-timeout: 5000       # 5초
      connection-test-query: SELECT 1
      pool-name: FlikHikariPool

app:
  frontend:
    url: ${FRONTEND_URL}

server:
  port: 8080
  servlet:
      context-path: /api

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
    display-request-duration: true
    groups-order: desc
  api-docs:
    path: /v3/api-docs

security:
  swagger-bypass:
    enabled: true

# Actuator endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,info,beans,env,hikaricp
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
    info:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active:unknown}
    enable:
      hikaricp: true  # HikariCP 메트릭 활성화
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true

# Logging configuration
logging:
  level:
    root: INFO
    # 애플리케이션 패키지 로그 레벨
    yunrry.flik: DEBUG

    # 배치 작업 관련 로그
    yunrry.flik.batch.job.GooglePlacesEnrichmentJob: DEBUG

    # OpenAI 임베딩 서비스 로그
    yunrry.flik.core.service.embedding.OpenAIEmbeddingService: DEBUG

    # 커스텀 로거들
    NULL_RATING_LOGGER: INFO
    NO_PLACE_FOUND_LOGGER: INFO

    # Spring 프레임워크 로그 레벨
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.springframework.data: INFO
    org.springframework.boot: INFO

    # WebClient HTTP 로그
    org.springframework.web.reactive.function.client: INFO
    reactor.netty.http.client: INFO

    # Hibernate 관련 로그
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO

    # HikariCP 로그 (성능 문제 디버깅용)
    com.zaxxer.hikari: INFO

  # 패턴 설정 (logback-spring.xml에서 오버라이드됨)
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

kakao:
  api:
    key: ${KAKAO_API_KEY:your-kakao-api-key}

naver:
  api:
    client-id: iR0esJl2LAiYkZGwXukQ
    client-secret: ${NAVER_SECRET:your-naver-api-key}


oauth2:
  providers:
    google:
      client-id: ${GOOGLE_CLIENT_ID}
      client-secret: ${GOOGLE_CLIENT_SECRET}
      redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:8080/api/auth/oauth/callback/google}
      authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
      token-uri: https://oauth2.googleapis.com/token
      user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
      scope: openid email profile
    kakao:
      client-id: ${KAKAO_CLIENT_ID}
      client-secret: ${KAKAO_CLIENT_SECRET}
      redirect-uri: ${KAKAO_REDIRECT_URI:http://localhost:8080/api/auth/oauth/callback/kakao}
      authorization-uri: https://kauth.kakao.com/oauth/authorize
      token-uri: https://kauth.kakao.com/oauth/token
      user-info-uri: https://kapi.kakao.com/v2/user/me
      scope: profile_nickname profile_image account_email

jwt:
  secret: ${JWT_SECRET:your-secret-key-here-must-be-at-least-256-bits}
  access-token-expiry: 36000 # 10시간
  refresh-token-expiry: 604800 # 7일

rate-limit:
  login:
    max-attempts: 5
    lock-duration: 15m


admin:
  master-key: ${ADMIN_MASTER_KEY:ADMIN_MASTER_KEY}